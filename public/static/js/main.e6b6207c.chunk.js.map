{"version":3,"sources":["users/usersSlice.js","navbar/NavBar.js","tasks/TaskCard.js","tasks/TaskForm.js","tasks/Tasks.js","users/LoginForm.js","users/SignUpForm.js","users/LoginPage.js","tasks/Task.js","tasks/EditTask.js","projects/projectsSlice.js","projects/ProjectForm.js","projects/Projects.js","projects/Project.js","teams/teamsSlice.js","teams/TeamForm.js","teams/Teams.js","teams/InviteForm.js","teams/Team.js","App.js","store.js","index.js"],"names":["fetchCurrentUser","createAsyncThunk","fetch","then","r","json","fetchUsers","loginUser","payload","method","headers","body","JSON","stringify","signupUser","logoutUser","ok","Error","success","createTask","deleteTask","concat","updateTask","id","usersSlice","createSlice","name","initialState","status","entities","currentUser","projects","teams","errors","reducers","extraReducers","_extraReducers","_defineProperty","pending","state","fulfilled","action","push","rejected","_action$payload","cUproject","find","p","project_id","cUteam","t","team_id","tasks","_toConsumableArray","project","team","userEntity","u","entityProject","entityTeam","filter","user","user_id","userProject","userTeam","_action$payload2","map","NavBar","dispatch","useDispatch","navigate","useNavigate","_jsxs","children","_jsx","NavLink","className","to","onClick","TaskCard","_ref","task","due_date","users","useSelector","console","log","username","TaskForm","allProjects","allTeams","projectOptions","creator_id","value","teamOptions","auth_users","includes","errorComps","userErrors","userIndex","error","index","_useState","useState","description","_useState2","_slicedToArray","inputState","setInputState","onInputChange","e","_objectSpread","target","_useState3","_useState4","projectID","setProjectID","_useState5","_useState6","teamID","setTeamID","formData","onSubmit","preventDefault","type","autoComplete","onChange","parseInt","Tasks","taskCardComps","flat","vis","setVis","LoginForm","email","setEmail","password","setPassword","isLoading","setIsLoading","SignUp","setisLoading","errorMessage","i","first_name","last_name","password_confirmation","title","length","LoginPage","showLogin","setShowLogin","SignUpForm","Task","useParams","flattenedTasks","EditTask","fetchProjects","createProject","projectsSlice","ProjectForm","Projects","createdProjectComps","Project","taskComps","fetchTeams","createTeam","updateTeam","teamsSlice","TeamForm","Teams","userTeamsComps","InviteForm","emailNotFoundError","setEmailNotFoundError","teamErrors","teamIndex","slice","updatedTeam","Team","memberTeam","teamMembers","App","loading","setLoading","previousUserId","setPreviousUserId","useEffect","Routes","Route","path","element","store","configureStore","reducer","usersReducer","projectsReducer","teamsReducer","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","Provider"],"mappings":"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","file":"static/js/main.e6b6207c.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n\n//Action Creators\nexport const fetchCurrentUser = createAsyncThunk(\"users/fetchCurrentUser\", () => {\n    return fetch(\"/me\")\n    .then((r) => r.json())\n})\n\nexport const fetchUsers = createAsyncThunk(\"users/fetchUsers\", () => {\n    return fetch(\"/users\")\n    .then((r) =>r.json())\n})\n\nexport const loginUser = createAsyncThunk(\"users/loginUser\", (payload) => {\n    return fetch(\"/login\", {\n        method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n    })\n    .then((r) => r.json())\n})\n\nexport const signupUser = createAsyncThunk(\"users/signupUser\", (payload) => {\n    return fetch(\"/signup\", {\n        method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n    })\n    .then((r) => r.json())\n})\n\nexport const logoutUser = createAsyncThunk(\"users/logoutUser\", () => {\n    return fetch(\"/logout\", {\n        method: \"DELETE\"\n    })\n    .then((r) => {\n        if (!r.ok) {\n            throw new Error(\"Logout request failed\");\n        }\n        return { success: true };\n    })\n})\n\nexport const createTask = createAsyncThunk(\"tasks/createTask\", (payload) => {\n    return fetch(\"/tasks\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n    })\n    .then((r) => r.json())\n})\n\nexport const deleteTask = createAsyncThunk(\"tasks/deleteTask\", (payload) => {\n    return fetch(`/tasks/${payload}`, {\n        method: \"DELETE\"\n    })\n    .then((r) => r.json())\n})\n\nexport const updateTask = createAsyncThunk(\"tasks/updateTask\", (payload) => {\n    return fetch(`/tasks/${payload.id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n    })\n    .then((r) => r.json())\n})\n\n//Reducer\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState: {\n        status: \"idle\",\n        entities: [],\n        currentUser: {\n            projects: [],\n            teams: []\n        },\n        errors: []\n    },\n    reducers: {\n\n    },\n    extraReducers: {\n        //fetchCurrentUser\n        [fetchCurrentUser.pending](state) {\n            state.status = \"loading\";\n        },\n        [fetchCurrentUser.fulfilled](state, action) {\n            state.currentUser = action.payload;\n            state.status = \"idle\";\n            state.errors = [];\n        },\n        //fetchUsers\n        [fetchUsers.pending](state) {\n            state.status = \"loading\";\n        },\n        [fetchUsers.fulfilled] (state, action) {\n            state.entities = action.payload;\n            state.status = \"idle\";\n            state.errors = [];\n        },\n        //loginUser\n        [loginUser.pending](state) {\n            state.status = \"loading\";\n        },\n        [loginUser.fulfilled](state, action) {\n            if ('errors' in action.payload) {\n                state.errors = [];\n                state.errors.push(action.payload);\n            } else {\n                state.currentUser = action.payload;\n                state.errors = [];\n            }\n            state.status = \"idle\";\n        },\n        [loginUser.rejected](state, action) {\n            state.errors = action.payload;\n            state.status = \"idle\"\n        },\n        //signupUser\n        [signupUser.pending](state) {\n            state.status = \"loading\";\n        },\n        [signupUser.fulfilled](state, action) {\n            if ('errors' in action.payload) {\n                state.errors = [];\n                state.errors.push(action.payload);\n            } else {\n                state.currentUser = action.payload;\n                state.errors = [];\n            }\n            state.status = \"idle\";\n        },\n        //logoutUser\n        [logoutUser.pending](state) {\n            state.status = \"loading\";\n        },\n        [logoutUser.fulfilled](state) {\n            state.status = \"idle\";\n            state.currentUser = null;\n        },\n        //createTask\n        [createTask.pending](state) {\n            state.status = \"loading\";\n        },\n        [createTask.fulfilled](state, action) {\n            if (action.payload?.errors) {\n                state.errors = [];\n                state.errors.push(action.payload);\n            } else {\n                //we need to update state.entities so that the user.team.tasks has the new task\n                //update currentUser\n                const cUproject = state.currentUser.projects.find((p) => p.id === action.payload.project_id);\n                const cUteam = state.currentUser.teams.find((t) => t.id === action.payload.team_id);\n                if (cUproject) {\n                    cUproject.tasks.push(action.payload);\n                }\n                if (cUteam) {\n                    cUteam.tasks.push(action.payload);\n                }\n                if (!cUproject) {\n                    state.currentUser.projects = [...state.currentUser.projects, action.payload.project];\n                }\n                if (!cUteam) {\n                    state.currentUser.teams = [...state.currentUser.teams, action.payload.team];\n                }\n                //update user in entities\n                //this isn't working for other users once they sign in to look at the task\n                const userEntity = state.entities.find((u) => u.id === state.currentUser.id)\n                const entityProject = userEntity.projects.find((p) => p.id === action.payload.project_id);\n                const entityTeam = userEntity.teams.find((t) => t.id === action.payload.team_id);\n                if (entityProject) {\n                    entityProject.tasks.push(action.payload);\n                }\n                if (entityTeam) {\n                    entityTeam.tasks.push(action.payload);\n                }\n                if (!entityProject) {\n                    userEntity.projects = [...userEntity.projects, action.payload.project];\n                }\n                if (!entityTeam) {\n                    userEntity.teams = [...userEntity.teams, action.payload.team];\n                }\n                state.errors = [];\n            }\n            state.status = \"idle\";\n\n        },\n        //deleteTask\n        [deleteTask.pending](state) {\n            state.status = \"loading\";\n        },\n        [deleteTask.fulfilled](state, action) {\n            //update currentUser\n            state.status = \"idle\";\n            const project = state.currentUser.projects.find((p) => p.id === action.payload.project_id)\n            const team = state.currentUser.teams.find((t) => t.id === action.payload.team_id)\n            project.tasks = project.tasks.filter((t) => t.id !== action.payload.id)\n            team.tasks = team.tasks.filter((t) => t.id !== action.payload.id)\n            if(!project.tasks) {\n                project.tasks = []\n            }\n            if(!team.tasks) {\n                team.tasks = []\n            }\n            //update user entity\n            const user = state.entities.find((u) => u.id === action.payload.user_id)\n            const userProject = user.projects.find((p) => p.id === action.payload.project_id)\n            const userTeam = user.teams.find((t) => t.id === action.payload.team_id)\n            userProject.tasks.filter((t) => t.id !== action.payload.id)\n            userTeam.tasks = userTeam.tasks.filter((t) => t.id !== action.payload.id)\n            if(!userProject.tasks) {\n                userProject.tasks = []\n            }\n            if(!userTeam.tasks) {\n                userTeam.tasks = []\n            }\n        },\n        //updateTask\n        [updateTask.pending](state) {\n            state.status = \"loading\";\n        },\n        [updateTask.fulfilled](state, action) {\n            if (action.payload?.errors) {\n                state.errors = [];\n                state.errors.push(action.payload);\n            } else {\n                state.status = \"idle\";\n                state.errors = [];\n                const project = state.currentUser.projects.find((p) => p.id === action.payload.project_id)\n                project.tasks = project.tasks.map((t) => {\n                    if (t.id === action.payload.id) {\n                        return action.payload\n                    } else {\n                        return t\n                    }\n                })\n                const team = state.currentUser.teams.find((t) => t.id === action.payload.team_id)\n                team.tasks = team.tasks.map((t) => {\n                    if (t.id === action.payload.id) {\n                        return action.payload\n                    } else {\n                        return t\n                    }\n                })\n            }\n        },\n    },\n});\n\nexport default usersSlice.reducer;","import { NavLink, useNavigate } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { logoutUser } from '../users/usersSlice'\n\nfunction NavBar() {\n    \n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n\n    function handleLogout() {\n        dispatch(logoutUser())\n        navigate(\"/\")\n    }\n\n    return(\n        <nav id=\"navbar\">   \n            <NavLink className=\"nav-btn\" to=\"/\">My Tasks</NavLink>\n            <NavLink className=\"nav-btn\" to=\"/projects\">Projects</NavLink>\n            <NavLink className=\"nav-btn\" to=\"/teams\">Teams</NavLink>\n            <button className=\"nav-btn-split\" onClick={handleLogout}>\n                Logout\n            </button>\n        </nav>\n    )\n}\n\nexport default NavBar","import {NavLink, useNavigate} from 'react-router-dom'\nimport {useDispatch} from 'react-redux'\nimport {deleteTask} from '../users/usersSlice'\nimport { useSelector } from 'react-redux'\n\nfunction TaskCard({task}) {\n\n    const dispatch = useDispatch()\n    const navigate = useNavigate()\n    const {\n        name,\n        due_date,\n        id,\n        project_id,\n        team_id,\n        user_id\n    } = task\n\n    // const currentUser = useSelector((state) => state.users.currentUser)\n    // const project = currentUser.projects.find((p) => p.id === project_id)\n    // const team = currentUser.teams.find((t) => t.id === team_id)\n    \n    const users = useSelector((state) => state.users.entities)\n    const currentUser = useSelector((state) => state.users.currentUser)\n    console.log(users)\n    const user = users.find((u) => u.id === user_id)\n    if (!user) {\n        return <div>\"Loading...\"</div>\n    }\n    const project = user.projects.find((p) => p.id === project_id)\n    const team = user.teams.find((t) => t.id === team_id)\n    function handleComplete() {\n        dispatch(deleteTask(id))\n    }\n\n    function handleEdit() {\n        navigate(`/tasks/${id}/edit`)\n    }\n\n    return(\n        <div>\n            <NavLink to={`/tasks/${id}`}>\n            {user.username} {name} {due_date} {project.name} {team.name}\n            \n            </NavLink>\n            {currentUser.id === user_id ? <button onClick={handleComplete}>✔</button> : null}\n            {currentUser.id === user_id ? <button onClick={handleEdit}>edit</button> : null}\n        </div>\n    )\n}\n\nexport default TaskCard","import {useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {createTask} from '../users/usersSlice'\n// import {addTaskToTeam} from '../teams/teamsSlice'\n\nfunction TaskForm() {\n    \n    const dispatch = useDispatch()\n\n    const currentUser = useSelector((state) => state.users.currentUser)\n    const allProjects = useSelector((state) => state.projects.entities)\n    const allTeams = useSelector((state) => state.teams.entities)\n    const errors = useSelector((state) => state.users.errors)\n\n    const userProjects = allProjects.filter((project) => project.creator_id === currentUser.id)\n    const projectOptions = userProjects.map((project) => {\n        return <option key={project.id} value={project.id}>{project.name}</option>\n    })\n\n    // const userTeams = allTeams.filter((team) => team.creator_id === currentUser.id)\n    const userTeams = allTeams.filter((t) => t.auth_users.includes(currentUser.id))\n    const teamOptions = userTeams.map((team) => {\n        return <option key={team.id} value={team.id} name={team.name}>{team.name}</option>\n    })\n\n    const errorComps = errors.map((userErrors, userIndex) => (\n        <ul key={userIndex}>\n          {userErrors.errors.map((error, index) => (\n            <li className=\"error\" key={index}>{error}</li>\n          ))}\n        </ul>\n      ));\n\n    const [inputState, setInputState] = useState({\n        name: \"\",\n        due_date: \"\",\n        description: \"\",\n    })\n\n    const {\n        name,\n        due_date,\n        description,\n    } = inputState\n\n    function onInputChange(e){\n        setInputState({\n            ...inputState,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const [projectID, setProjectID] = useState(\"\")\n    const [teamID, setTeamID] = useState(\"\")\n\n    const formData = {\n        name,\n        due_date,\n        description,\n        project_id: projectID,\n        team_id: teamID,\n        user_id: currentUser.id\n    }\n\n    function onProjectChange(e) {\n        setProjectID(parseInt(e.target.value))\n    }\n\n    function onTeamChange(e) {\n        setTeamID(parseInt(e.target.value))\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        dispatch(createTask(formData))\n        setInputState({\n            name: \"\",\n            due_date: \"\",\n            description: \"\",\n        })\n        setProjectID(\"\")\n        setTeamID(\"\")\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            {errorComps}\n            <label>\n                Task Name\n                <input\n                name=\"name\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={onInputChange}\n                />\n            </label>\n            <label>\n                Due Date\n                <input\n                name=\"due_date\"\n                type=\"date\"\n                autoComplete=\"off\"\n                value={due_date}\n                onChange={onInputChange}\n                />\n            </label>\n            <label>\n                Description\n                <input\n                name=\"description\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={description}\n                onChange={onInputChange}\n                />\n            </label>\n            <label>\n                Team\n                <select onChange={onTeamChange} value={teamID}>\n                    <option name=\"\" value=\"\">---Select a Team---</option>\n                    {teamOptions}\n                </select>\n            </label>\n            <label>\n                Project\n                <select onChange={onProjectChange} value={projectID}>\n                    <option name=\"\" value=\"\">---Select a Project---</option>\n                    {projectOptions}\n                </select>\n            </label>\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default TaskForm","import {useSelector} from 'react-redux'\nimport TaskCard from './TaskCard'\nimport {useState} from 'react'\nimport TaskForm from './TaskForm'\n\nfunction Tasks() {\n    \n    const projects = useSelector((state) => state.users.currentUser.projects)\n    const tasks = projects.map((project) => project.tasks)\n    const flattenedTasks = tasks.flat()\n    const taskCardComps = flattenedTasks.map((task) => {\n        return <TaskCard key={task.id} task={task}/>\n    })\n\n    const [vis, setVis] = useState(false)\n    function handleClick() {\n        setVis(!vis)\n    }\n\n    return (\n        <div>\n            <button onClick={handleClick}>+ Add Task</button>\n            {vis ? <TaskForm vis={vis} setVis={setVis}/> : null}\n            <br></br>\n            {taskCardComps ? taskCardComps : null}\n        </div>\n    )\n}\n\nexport default Tasks","import { useState } from 'react'\n// import Error from './Error'\nimport { useDispatch } from \"react-redux\"\nimport { loginUser } from \"./usersSlice\"\n\nfunction LoginForm () {\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n    const dispatch = useDispatch()\n    \n    let formData = {\n        email,\n        password\n    }\n\n    function handleSubmit(e){\n        e.preventDefault();\n        setIsLoading(true);\n        dispatch(loginUser(formData))\n        .then(() => {\n            setIsLoading(false)\n            setEmail(\"\");\n            setPassword(\"\");\n        })\n    }\n\n    return(\n        <form onSubmit={handleSubmit}>\n            <label className=\"form-label\">\n                Email address\n                <input\n                name=\"email\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                ></input>\n            </label>\n            <label className=\"form-label\">\n                Password\n                <input\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                ></input>\n            </label>\n            <button className=\"login-btn\" type=\"submit\">{isLoading? \"Loading...\" : \"Sign In\"}</button>\n        </form>\n    )\n}\n\nexport default LoginForm","import { useState } from 'react'\nimport { signupUser } from './usersSlice'\nimport { useDispatch } from 'react-redux'\nimport { useSelector } from \"react-redux\"\n\nfunction SignUp() {\n\n    const dispatch = useDispatch()\n\n    const [isLoading, setisLoading] = useState(false);\n    const errors = useSelector((state) => state.users.errors)\n    const errorComps = errors.map((e, index) => (\n        <div key={index} className=\"error-container\">\n            {e.errors.map((errorMessage, i) => (\n                <p key={i} className=\"errors\">{errorMessage}</p>\n            ))}\n        </div>\n    ));\n\n    const [inputState, setInputState] = useState({\n        first_name: \"\",\n        last_name: \"\",\n        email: \"\",\n        password: \"\",\n        password_confirmation: \"\",\n        title: \"\",\n    })\n\n    const {\n        first_name ,\n        last_name,\n        email,\n        password,\n        password_confirmation,\n        title,\n    } = inputState\n\n    function onInputChange(e){\n        setInputState({\n            ...inputState,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleSubmit(e){\n        e.preventDefault()\n        setisLoading(true)\n        dispatch(signupUser(inputState))\n        .then(() => {\n            setisLoading(false)\n        })\n    }\n\n    return(\n        <form className=\"login-form\" onSubmit={handleSubmit}>\n            <label>\n                First Name\n                <input\n                name=\"first_name\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={first_name}\n                onChange={onInputChange}\n                ></input>\n            </label>\n            <label>\n                Last Name\n                <input\n                name=\"last_name\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={last_name}\n                onChange={onInputChange}\n                ></input>\n            </label>\n            <label>\n                Title\n                <input\n                name=\"title\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={title}\n                onChange={onInputChange}\n                ></input>\n            </label>\n            <label>\n                Email\n                <input\n                name=\"email\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={email}\n                onChange={onInputChange}\n                ></input>\n            </label>\n            <label>\n                Password\n                <input\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"off\"\n                value={password}\n                onChange={onInputChange}\n                ></input>\n            </label>\n            <label>\n                Password Confirmation\n                <input\n                name=\"password_confirmation\"\n                type=\"password\"\n                autoComplete=\"off\"\n                value={password_confirmation}\n                onChange={onInputChange}\n                ></input>\n            </label>\n            <button className=\"login-btn\" type=\"submit\">{isLoading? \"Loading...\" : \"Sign Up\"}</button>\n            {errors.length > 0 ? errorComps : null}\n        </form>\n    )\n}\n\nexport default SignUp","import { useState } from 'react'\nimport { useSelector } from \"react-redux\"\n\nimport LoginForm from './LoginForm'\nimport SignUpForm from './SignUpForm'\n\nfunction LoginPage() {\n\n    const errors = useSelector((state) => state.users.errors)\n\n    const [showLogin, setShowLogin] = useState(true)\n    \n    const errorComps = errors.map((e, index) => (\n        <div key={index} className=\"error-container\">\n            {e.errors.map((errorMessage, i) => (\n                <p key={i} className=\"errors\">{errorMessage}</p>\n            ))}\n        </div>\n    ));\n\n    return(\n        <div className=\"parent\">\n            <h1 className=\"header\">Trakable</h1>\n           \n            {showLogin ? (\n                <div className=\"login-form-container\">\n                    <h2>Welcome to Trakable</h2>\n                    <p>To begin, please sign in.</p>\n                    <LoginForm />\n                    {errors.length > 0 ? errorComps : null}\n                    <hr></hr>\n                    <p>\n                        Don't have an account? &nbsp;\n                        <button className=\"login-btn\"\n                         onClick={() => setShowLogin(false)}>\n                         Sign Up\n                        </button>\n                    </p>\n                    </div>\n            ) : (\n                    <div className=\"login-form-container\">\n                    <SignUpForm />\n                    <hr></hr>\n                    <p>\n                        Already have an account? &nbsp;\n                        <button className=\"login-btn\"\n                         onClick={() => setShowLogin(true)}>\n                         Log In\n                        </button>\n                    </p>\n                    </div>\n            )}\n        </div>\n    )\n}\n\nexport default LoginPage","import {useSelector} from 'react-redux'\nimport { useParams } from 'react-router-dom'\n\nfunction Task() {\n    \n    let {id} = useParams()\n    id = parseInt(id)\n\n    const users = useSelector((state) => state.users.entities)\n    const currentUser = useSelector((state) => state.users.currentUser)\n    const user = users.find((u) => u.id === currentUser.id)\n    // const projects = useSelector((state) => state.users.currentUser.projects)\n    const teams = user.teams\n    const tasks = teams.map((team) => team.tasks)\n    const flattenedTasks = tasks.flat()\n    const task = flattenedTasks.find((t) => t.id === id)\n    console.log(flattenedTasks)\n    console.log(task)\n\n    const {\n        name,\n        description,\n        due_date\n    } = task\n\n    return (\n        <div>\n            {name} {due_date}\n            <br></br>\n            {description} \n            <hr></hr>\n        </div>\n    )\n}\n\nexport default Task","import {useParams} from 'react-router-dom'\nimport {useSelector, useDispatch} from 'react-redux'\nimport {useState} from 'react'\nimport {updateTask} from '../users/usersSlice'\n\nfunction EditTask() {\n\n    let {id} = useParams();\n    id = parseInt(id);\n    const dispatch = useDispatch();\n\n    const projects = useSelector((state) => state.users.currentUser.projects)\n    const tasks = projects.map((project) => project.tasks)\n    const flattenedTasks = tasks.flat()\n    const task = flattenedTasks.find((t) => t.id === id)\n    const errors = useSelector((state) => state.users.errors)\n\n    const [inputState, setInputState] = useState({\n        name: task.name,\n        due_date: task.due_date,\n        description: task.description,\n        id: task.id\n    });\n\n    const {\n        name,\n        due_date,\n        description,\n    } = inputState;\n\n    function onInputChange(e){\n        setInputState({\n            ...inputState,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        dispatch(updateTask(inputState));\n        // navigate(\"/\")\n    }\n\n    const errorComps = errors.map((userErrors, userIndex) => (\n        <ul key={userIndex}>\n          {userErrors.errors.map((error, index) => (\n            <li className=\"error\" key={index}>{error}</li>\n          ))}\n        </ul>\n      ));\n\n    return(\n        <div>\n            {task.name} {task.due_date} {task.description}\n            <form onSubmit={handleSubmit}>\n                {errorComps}\n            <label>\n                Task Name\n                <input\n                name=\"name\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={onInputChange}\n                />\n            </label>\n            <label>\n                Due Date\n                <input\n                name=\"due_date\"\n                type=\"date\"\n                autoComplete=\"off\"\n                value={due_date}\n                onChange={onInputChange}\n                />\n            </label>\n            <label>\n                Description\n                <input\n                name=\"description\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={description}\n                onChange={onInputChange}\n                />\n            </label>\n            <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default EditTask","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n\n//action creators\nexport const fetchProjects = createAsyncThunk(\"users/fetchProjects\", () => {\n    return fetch(\"/projects\")\n    .then((r) => r.json())\n})\n\nexport const createProject = createAsyncThunk(\"projects/createProject\", (payload) => {\n    return fetch(\"/projects\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n    })\n    .then((r) => r.json())\n})\n\n\n//reducer\nconst projectsSlice = createSlice({\n    name: \"projects\",\n    initialState: {\n        status: \"idle\",\n        entities: [],\n        errors: []\n    },\n    reducers: {\n\n    },\n    extraReducers: {\n        //fetchProjects\n        [fetchProjects.pending](state) {\n            state.status = \"loading\";\n        },\n        [fetchProjects.fulfilled](state, action) {\n            state.entities = action.payload;\n            state.status = \"idle\";\n        },\n        //createProject\n        [createProject.pending](state) {\n            state.status = \"loading\";\n        },\n        [createProject.fulfilled](state, action) {\n            if ('errors' in action.payload) {\n                state.errors = [];\n                state.errors.push(action.payload);\n            } else {\n                state.entities.push(action.payload);\n                state.errors = [];\n            }\n            state.status = \"idle\";\n        }\n    }\n})\n\n\nexport default projectsSlice.reducer;","import {useState} from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport {createProject} from './projectsSlice'\n\nfunction ProjectForm() {\n\n    const dispatch = useDispatch()\n\n    const currentUser = useSelector((state) => state.users.currentUser)\n\n    const errors = useSelector((state) => state.projects.errors)\n    const errorComps = errors.map((userErrors, userIndex) => (\n        <ul key={userIndex}>\n          {userErrors.errors.map((error, index) => (\n            <li className=\"error\" key={index}>{error}</li>\n          ))}\n        </ul>\n      ));\n\n    const [inputState, setInputState] = useState({\n        name: \"\",\n        description: \"\",\n        creator_id: currentUser.id\n    })\n\n    const {\n        name,\n        description\n    } = inputState\n\n    function onInputChange(e){\n        setInputState({\n            ...inputState,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        dispatch(createProject(inputState))\n        setInputState({\n            name: \"\",\n            description: \"\",\n            creator_id: currentUser.id\n        })\n    }\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n                {errorComps}\n            <label>\n                Project Name\n                <input\n                name=\"name\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={onInputChange}\n                />\n            </label>\n            <label>\n                Description\n                <input\n                name=\"description\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={description}\n                onChange={onInputChange}\n                />\n            </label>\n            <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default ProjectForm","import {useSelector} from 'react-redux'\nimport {NavLink} from 'react-router-dom'\nimport {useState} from 'react'\nimport ProjectForm from './ProjectForm'\n\nfunction Projects() {\n\n    const currentUser = useSelector((state) => state.users.currentUser)\n    const allProjects = useSelector((state) => state.projects.entities)\n\n    const createdProjects = allProjects.filter((project) => project.creator_id === currentUser.id)\n    const createdProjectComps = createdProjects.map((project) => {\n        return <NavLink to={`/projects/${project.id}`} key={project.id}>{project.name}</NavLink>\n    })\n\n    const [vis, setVis] = useState(false)\n    function handleClick() {\n        setVis(!vis)\n    }\n\n    return (\n        <div>\n            <button onClick={handleClick}>+ Add Project</button>\n            {vis ? <ProjectForm vis={vis} setVis={setVis}/> : null}\n            <h4>Projects I've Created</h4>\n            {createdProjectComps}\n\n        </div>\n    )\n}\n\nexport default Projects","import {useParams} from 'react-router-dom'\nimport {useSelector} from 'react-redux'\nimport TaskCard from '../tasks/TaskCard'\n\nfunction Project() {\n\n    let {id} = useParams()\n    id = parseInt(id)\n    \n    const projects = useSelector((state) => state.users.currentUser.projects)\n    const project = projects.find((p) => p.id === id)\n    const tasks = project ? project.tasks.map((t) => t) : []\n    const taskComps = tasks.map((task) => <TaskCard key={task.id} task={task}/>)\n   \n    if (!project) {\n        return <div>Please add your first task to this project.</div>\n    }\n\n    return(\n       <div>\n        <h4>{project.name}</h4>\n        {taskComps.length === 0 ? null : taskComps}\n       </div>\n    )\n}\n\nexport default Project","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\"\n\n//action creators\nexport const fetchTeams = createAsyncThunk(\"teams/fetchTeams\", () => {\n    return fetch(\"/teams\")\n    .then((r) => r.json())\n})\n\nexport const createTeam = createAsyncThunk(\"teams/createTeam\", (payload) => {\n    return fetch(\"/teams\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n    })\n    .then((r) => r.json())\n})\n\nexport const updateTeam = createAsyncThunk(\"teams/updateTeam\", (payload) => {\n    return fetch(`/teams/${payload.id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n    })\n    .then((r) => r.json())\n})\n\n//reducer\nconst teamsSlice = createSlice({\n    name: \"teams\",\n    initialState: {\n        status: \"idle\",\n        entities: [],\n        errors: []\n    },\n    reducers: {\n    },\n    extraReducers: {\n        //fetchteams\n        [fetchTeams.pending](state) {\n            state.status = \"loading\";\n        },\n        [fetchTeams.fulfilled](state, action) {\n            state.entities = action.payload;\n            state.status = \"idle\";\n        },\n        //createTeam\n        [createTeam.pending](state) {\n            state.status = \"loading\";\n        },\n        [createTeam.fulfilled](state, action) {\n            state.status = \"idle\";\n            if ('errors' in action.payload) {\n                state.errors = [];\n                state.errors.push(action.payload)\n            } else {\n                state.entities.push(action.payload);\n                state.errors = [];\n            }\n        },\n        //updateTeam\n        [updateTeam.pending](state) {\n            state.status = \"loading\"\n        },\n        [updateTeam.fulfilled](state, action) {\n            state.status = \"idle\"\n            if ('errors' in action.payload) {\n                state.errors = [];\n                state.errors.push(action.payload)\n            } else {\n                state.entities = state.entities.map((t) => {\n                    if (t.id === action.payload.id) {\n                        return action.payload\n                    } else {\n                        return t\n                    }\n                })\n                state.errors = [];\n            }\n        },\n    }\n})\n\nexport default teamsSlice.reducer;","import { useDispatch, useSelector } from 'react-redux'\nimport { createTeam } from './teamsSlice'\nimport { useState } from 'react'\n\nfunction TeamForm() {\n\n    const dispatch = useDispatch()\n    const currentUser = useSelector((state) => state.users.currentUser)\n\n    const errors = useSelector((state) => state.teams.errors)\n    const errorComps = errors.map((userErrors, userIndex) => (\n        <ul key={userIndex}>\n          {userErrors.errors.map((error, index) => (\n            <li className=\"error\" key={index}>{error}</li>\n          ))}\n        </ul>\n      ));\n\n    const [inputState, setInputState] = useState({\n        name: \"\",\n        description: \"\",\n        creator_id: currentUser.id\n    })\n\n    const {\n        name,\n        description\n    } = inputState\n\n    function onInputChange(e){\n        setInputState({\n            ...inputState,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        dispatch(createTeam(inputState))\n        setInputState({\n            name: \"\",\n            description: \"\",\n            creator_id: currentUser.id\n        })\n    }\n\n    return(\n        <div>\n            <form onSubmit={handleSubmit}>\n                {errorComps}\n            <label>\n                Team Name\n                <input\n                name=\"name\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={name}\n                onChange={onInputChange}\n                />\n            </label>\n            <label>\n                Description\n                <input\n                name=\"description\"\n                type=\"text\"\n                autoComplete=\"off\"\n                value={description}\n                onChange={onInputChange}\n                />\n            </label>\n            <button type=\"submit\">Submit</button>\n            </form>\n        </div>\n    )\n}\n\nexport default TeamForm","// import { useSelector } from 'react-redux'\n// import { NavLink } from 'react-router-dom'\n// import { useState } from 'react'\n// import TeamForm from './TeamForm'\n\n// function Teams() {\n\n//     const currentUser = useSelector((state) => state.users.currentUser)\n//     const allTeams = useSelector((state) => state.teams.entities)\n    \n//     const userTeams = allTeams.filter((team) => team.creator_id === currentUser.id)\n//     const userTeamsComps = userTeams.map((team) => {\n//         return <NavLink to={`/teams/${team.id}`} key={team.id}>{team.name}</NavLink>\n//     })\n\n//     const [vis, setVis] = useState(false)\n//     function handleVis() {\n//         setVis(!vis)\n//     }\n\n//     return(\n//         <div>\n//             <button onClick={handleVis}>+ Add Team</button>\n//             {vis ? <TeamForm vis={vis} setVis={setVis}/> : null}\n//             <br></br>\n//             <h4>Teams I've Created</h4>\n//             {userTeamsComps}\n//         </div>\n//     )\n// }\n\n// export default Teams\n\nimport { useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport { useState } from 'react'\nimport TeamForm from './TeamForm'\n\nfunction Teams() {\n\n    const [vis, setVis] = useState(false)\n    const currentUser = useSelector((state) => state.users.currentUser)\n    const allTeams = useSelector((state) => state.teams.entities)\n    const userTeams = allTeams.filter((team) => team.auth_users.includes(currentUser.id))\n    const userTeamsComps = userTeams.map((team) => {\n        return <NavLink to={`/teams/${team.id}`} key={team.id}>{team.name}</NavLink>\n    })\n\n    function handleVis() {\n        setVis(!vis)\n    }\n\n    return(\n        <div>\n            <button onClick={handleVis}>+ Add Team</button>\n            {vis ? <TeamForm vis={vis} setVis={setVis}/> : null}\n            <br></br>\n            <h4>My Teams</h4>\n            {userTeamsComps}\n        </div>\n    )\n}\n\nexport default Teams","import { useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateTeam } from './teamsSlice'\n\nfunction InviteForm() {\n    let { id } = useParams()\n    id = parseInt(id)\n    const dispatch = useDispatch()\n    const teams = useSelector((state) => state.teams.entities)\n    const errors = useSelector((state) => state.teams.errors)\n    const users = useSelector((state) => state.users.entities)\n    const [email, setEmail] = useState(\"\")\n    const [emailNotFoundError, setEmailNotFoundError] = useState(false)\n\n    function handleChange(e) {\n        setEmail(e.target.value)\n        setEmailNotFoundError(false)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        let team = teams.find((t) => t.id === id)\n        let user = users.find((u) => u.email === email)\n        \n        if (user) {\n            const updatedTeam = {\n                ...team,\n                auth_users: [...team.auth_users, user.id]\n            }\n            dispatch(updateTeam(updatedTeam))\n            setEmailNotFoundError(false)\n        } else {\n            setEmailNotFoundError(true)\n        }\n    }\n\n    const errorComps = errors.map((teamErrors, teamIndex) => (\n        <div key={teamIndex}>\n            {teamErrors.errors.map((error, index) => (\n                <div className=\"error\" key={index}>{error.slice(11)}</div>\n            ))}\n        </div>\n    ));\n\n    return (\n        <form onSubmit={handleSubmit}>\n            {errorComps}\n            {emailNotFoundError && (\n                <div className=\"error\">User with this email not found.</div>\n            )}\n            <label>User's Email\n                <input\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"email\"\n                    value={email}\n                />\n            </label>\n            <button type=\"submit\">Submit</button>\n        </form>\n    )\n}\n\nexport default InviteForm\n","import { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport TaskCard from \"../tasks/TaskCard\"\nimport { useState } from 'react'\nimport InviteForm from './InviteForm'\n\nfunction Team() {\n\n    let {id} = useParams();\n    id = parseInt(id)\n    const [vis, setVis] = useState(false)\n    \n    const users = useSelector((state) => state.users.entities)\n    const teams = useSelector((state) => state.users.currentUser.teams)\n    const allTeams = useSelector((state) => state.teams.entities)\n    //iterate over each users teams and find a team that matches the team\n    const team = teams.find((t) => t.id === id)\n    const tasks = team ? team.tasks.map((t) => t) : []\n    const taskComps = tasks.map((task) => <TaskCard key={task.id} task={task}/>)\n\n    if (!team) {\n        return <div>Please add a task to this team.</div>\n    }\n    // Find the team members\n    const memberTeam = allTeams.find((t) => t.id === id)\n    if (!memberTeam) {\n        return <div>\"Loading...\"</div>\n    }\n\n    const teamMembers = users.filter((u) => memberTeam.auth_users.includes(u.id));\n    // const teamMembers = users.filter((u) => team.auth_users.includes(u.id));\n\n    function handleVis() {\n        setVis(!vis)\n    }\n   \n    return(\n        <div>   \n            <h4>{team.name}</h4>\n            <h4>Team Members {teamMembers.map((u) => <li key={u.id}>{u.username}</li>)}</h4>\n            <button onClick={handleVis}>Invite a Teammate</button>\n            {vis ? <InviteForm /> : null}\n            {taskComps.length === 0 ? null : taskComps}\n        </div>\n    )\n}\n\nexport default Team\n\n// import { useParams } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import TaskCard from \"../tasks/TaskCard\";\n// import { useState } from 'react';\n// import InviteForm from './InviteForm';\n\n// function Team() {\n//     let { id } = useParams();\n//     id = parseInt(id);\n//     const [vis, setVis] = useState(false);\n//     const users = useSelector((state) => state.users.entities);\n//     const teams = useSelector((state) => state.teams.entities);\n//     const currentUser = useSelector((state) => state.users.currentUser);\n\n//     const team = teams.find((t) => t.id === id);\n//     if (!team) {\n//         return <div>Please add a task to this team.</div>;\n//     }\n\n//     //Find the team members\n//     //to render the team members, we need to use the updated Team entity to find auth_users\n//     const teamMembers = users.filter((u) => team.auth_users.includes(u.id));\n\n//     //to render the teams tasks, we need to find all of the teams tasks and reduce them to unique tasks\n//     const tasksByTeamMember = teamMembers.map((member) => {\n//         const userTeam = member.teams.find((t) => t.id === id);\n//         return userTeam ? userTeam.tasks : [];\n//     });\n\n//     // Flatten the tasks into a single array\n//     const allTasks = [].concat(...tasksByTeamMember);\n\n//     // Use a Set to store unique tasks\n//     const uniqueTasks = new Set(allTasks);\n\n//     // Convert the Set back to an array\n//     const uniqueTasksArray = Array.from(uniqueTasks);\n\n//     // Map tasks to TaskCard components\n//     const taskComps = uniqueTasksArray.map((task) => (\n//         <TaskCard key={task.id} task={task} />\n//     ));\n//     // const userTeam = currentUser.teams.find((t) => t.id === id)\n//     // const tasksCreatedByTeamMembers = userTeam.tasks\n    \n//     // // Map tasks to TaskCard components\n//     // const taskComps = tasksCreatedByTeamMembers.map((task) => (\n//     //     <TaskCard key={task.id} task={task} />\n//     // ));\n\n//     function handleVis() {\n//         setVis(!vis);\n//     }\n\n//     return (\n//         <div>\n//             <h4>{team.name}</h4>\n//             <h4>Team Members {teamMembers.map((u) => <li key={u.id}>{u.username}</li>)}</h4>\n//             {currentUser.id === team.creator_id ? <button onClick={handleVis}>Invite a Team Member</button> : null}\n//             {vis ? <InviteForm /> : null}\n//             <br />\n//             {taskComps.length === 0 ? null : taskComps}\n//         </div>\n//     );\n// }\n\n// export default Team;\n\n// import { useParams } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n// import TaskCard from \"../tasks/TaskCard\";\n// import { useState } from 'react';\n// import InviteForm from './InviteForm';\n\n// function Team() {\n//     let { id } = useParams();\n//     id = parseInt(id);\n//     const [vis, setVis] = useState(false);\n//     const users = useSelector((state) => state.users.entities);\n//     const teams = useSelector((state) => state.teams.entities);\n//     const currentUser = useSelector((state) => state.users.currentUser);\n\n//     const team = teams.find((t) => t.id === id);\n//     if (!team) {\n//         return <div>Please add a task to this team.</div>;\n//     }\n\n//     // Find the team members\n//     const teamMembers = users.filter((u) => team.auth_users.includes(u.id));\n\n//     // Find tasks for each team member\n//     const tasksByTeamMember = teamMembers.map((member) => {\n//         const userTeam = member.teams.find((t) => t.id === id);\n//         return userTeam ? userTeam.tasks : [];\n//     });\n\n//     // Flatten the tasks into a single array\n//     const allTasks = [].concat(...tasksByTeamMember);\n\n//     // Use a Set to store unique task IDs\n//     const uniqueTaskIds = new Set();\n\n//     // Filter tasks to only include unique ones based on their IDs\n//     const uniqueTasksArray = allTasks.filter((task) => {\n//         if (!uniqueTaskIds.has(task.id)) {\n//             uniqueTaskIds.add(task.id);\n//             return true;\n//         }\n//         return false;\n//     });\n\n//     // Map tasks to TaskCard components\n//     const taskComps = uniqueTasksArray.map((task) => (\n//         <TaskCard key={task.id} task={task} />\n//     ));\n\n//     function handleVis() {\n//         setVis(!vis);\n//     }\n\n//     return (\n//         <div>\n//             <h4>{team.name}</h4>\n//             <h4>Team Members {teamMembers.map((u) => <li key={u.id}>{u.username}</li>)}</h4>\n//             {currentUser.id === team.creator_id ? <button onClick={handleVis}>Invite a Team Member</button> : null}\n//             {vis ? <InviteForm /> : null}\n//             <br />\n//             {taskComps.length === 0 ? null : taskComps}\n//         </div>\n//     );\n// }\n\n// export default Team;\n","import './styles/App.css';\nimport NavBar from './navbar/NavBar'\nimport Tasks from './tasks/Tasks'\nimport LoginPage from './users/LoginPage'\nimport Task from './tasks/Task'\nimport EditTask from './tasks/EditTask'\nimport Projects from './projects/Projects'\nimport Project from './projects/Project'\nimport Teams from './teams/Teams'\nimport Team from './teams/Team'\nimport { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Routes, Route } from 'react-router-dom'\nimport { fetchCurrentUser, fetchUsers } from './users/usersSlice'\nimport { fetchProjects } from './projects/projectsSlice'\nimport { fetchTeams } from './teams/teamsSlice'\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(true);\n  const currentUser = useSelector((state) => state.users.currentUser);\n  console.log(currentUser);\n\n  // Initialize previousUserId to null\n  const [previousUserId, setPreviousUserId] = useState(null);\n\n  useEffect(() => {\n    dispatch(fetchCurrentUser())\n      .then(() => setLoading(false))\n  }, [dispatch]);\n\n  useEffect(() => {\n    // Check if the user has changed (new user login)\n    if (currentUser && currentUser.id !== previousUserId) {\n      // Dispatch fetch actions when a new user logs in\n      dispatch(fetchUsers());\n      dispatch(fetchProjects());\n      dispatch(fetchTeams());\n\n      // Update previousUserId to the current user's ID\n      setPreviousUserId(currentUser.id);\n    }\n  }, [dispatch, currentUser, previousUserId]);\n\n  if (loading) {\n    return <div></div>\n  }\n\n  if (!currentUser || currentUser.errors) {\n    return <LoginPage />\n  }\n\n  return (\n    <main>\n      <NavBar />\n        <Routes>\n          <Route\n          path=\"/\"\n          element={<Tasks />}/>\n          <Route \n          path=\"/tasks/:id\"\n          element={<Task />}\n          />\n          <Route \n          path=\"/tasks/:id/edit\"\n          element={<EditTask />}\n          />\n          <Route \n          path=\"/projects\"\n          element={<Projects />}\n          />\n          <Route \n          path=\"/projects/:id\"\n          element={<Project />}\n          />\n          <Route \n          path=\"/teams\"\n          element={<Teams />}\n          />\n          <Route \n          path=\"/teams/:id\"\n          element={<Team />}\n          />\n        </Routes>\n    </main>\n\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\n\nimport usersReducer from \"./users/usersSlice\";\nimport projectsReducer from \"./projects/projectsSlice\"\nimport teamsReducer from \"./teams/teamsSlice\"\n\nconst store = configureStore({\n  reducer: {\n    users: usersReducer,\n    projects: projectsReducer,\n    teams: teamsReducer\n  },\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './styles/index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from 'react-router-dom'\nimport store from \"./store\"\n\n//wrapping with Provider returns\n//TypeError: Cannot read properties of null (reading 'useMemo')\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <BrowserRouter>\n      <Provider store={store}>\n          <App />\n      </Provider>\n    </BrowserRouter>\n);\n\n"],"sourceRoot":""}